apply plugin: 'com.android.application'




def getVersionCode = { ->
    try {
        def code = new ByteArrayOutputStream()
        exec {
            commandLine 'git', 'tag', '--list'
            standardOutput = code
        }
        return code.toString().split("\n").size()
    }
    catch (ignored) {
        return 1
    }
}

def getVersionName = { ->

        def stdout = new ByteArrayOutputStream()
        exec {
            commandLine 'cmd', 'describe', '--tags', '--long'
            standardOutput = stdout
        }
        stdout = stdout.toString().trim()
        stdout = stdout.split(']')
        return stdout[0]


}

android {
    compileSdkVersion 30
    buildToolsVersion "30.0.3"

    flavorDimensions 'default'

    productFlavors.all {
        buildConfigField 'boolean', 'IS_DEMO', 'true'
    }

    productFlavors {


        Premium {

            buildConfigField 'boolean', 'IS_DEMO', 'false'
            dimension 'default'
            versionName getVersionName() + "-prem"
        }
        Free {
            buildConfigField 'boolean', 'IS_DEMO', 'true'
            dimension 'default'
            versionName getVersionName() + "-free"
        }
    }

    defaultConfig {
        applicationId "com.example.americanchanger"
        minSdkVersion 16
        targetSdkVersion 30
        versionCode getVersionCode()
        versionName getVersionName()
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"


    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            buildConfigField "boolean", "IS_DEMO", "true"
        }
    }
    sourceSets {

        Free {
            res {
                srcDirs 'src/Free/res', 'src/Free/res/'
            }
            java {
                srcDirs 'src/Free/java', 'src/Free/java/'
            }
        }
        Premium {
            res {
                srcDirs 'src/Premium/res', 'src/Premium/res/'
            }
            java {
                srcDirs 'src/Premium/java', 'src/Premium/java/'
            }
        }

    }
}


dependencies {
    implementation fileTree(dir: "libs", include: ["*.jar"])
    implementation 'androidx.appcompat:appcompat:1.1.0'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    implementation 'androidx.lifecycle:lifecycle-extensions:2.1.0'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test.ext:junit:1.1.1'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'

}
